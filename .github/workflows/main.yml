name: "Build & Release"

# Triggers the workflow on pull requests and pushes to the specified branches
on:
  pull_request:
    branches:
      - main
      - master
  push:
    branches:
      - main
      - master
      - develop

# Ensure that the GITHUB_TOKEN has the required write permissions
permissions:
  contents: write  # Grant write permission to the GITHUB_TOKEN to allow releases

jobs:
  build:
    name: Build & Release
    runs-on: windows-latest

    steps:
      # Checkout the repository
      - uses: actions/checkout@v3

      # Set up Java JDK (use JDK 11, which is the recommended version for Android)
      - uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '11'

      # Set up Flutter
      - uses: subosito/flutter-action@v2
        with:
          channel: 'stable'
          architecture: x64

      # Build the Android APK in release mode with split per ABI
      - name: Build APK
        run: flutter build apk --release --split-per-abi

      # Upload APK as an artifact for future use
      - name: Upload APK
        uses: actions/upload-artifact@v3
        with:
          name: APKs
          path: build/app/outputs/apk/release/

      # Push to GitHub Releases
      - name: Push to GitHub Releases
        uses: ncipollo/release-action@v1
        with:
          artifacts: "build/app/outputs/apk/release/*.apk"
          tag: v1.0.${{ github.run_number }}  # Automatically tag the release with versioning
          token: ${{ secrets.GITHUB_TOKEN }}  # Use the correct GitHub token provided by GitHub Actions
